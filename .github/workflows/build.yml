name: Build
on: [workflow_dispatch]
jobs:
    windows_build:
        name: Windows build
        runs-on: windows-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        steps:
            - name: Checkout repo
              uses: actions/checkout@v1
            - name: Checkout submodules
              run: git submodule update --init --recursive
            - name: Cache vcpkg
              uses: actions/cache@v1
              with:
                path: vcpkg
                key: ${{ runner.os }}-vcpkg-${{ hashFiles('build.windows') }}
            - name: vcpkg
              run: |
                if(!(Test-Path .\vcpkg))
                {
                git clone https://github.com/microsoft/vcpkg.git
                cd vcpkg
                .\bootstrap-vcpkg.bat
                .\vcpkg.exe integrate install
                .\vcpkg.exe install '@${{ github.workspace }}/build.windows'
                }
            - name: cmake
              run: cmake -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake -G "Visual Studio 16 2019" -A x64 .
            - name: Setup MSBuild.exe
              uses: microsoft/Setup-MSBuild@v1.0.2
            - name: MSBuild
              run: msbuild USC.sln -p:Configuration=Release /m /verbosity:minimal
            - name: Tests
              run: rm ./bin/Tests.*
            - name: Get Symbols 
              continue-on-error: true
              run: |
                mkdir -f .\bin\crash_dumps\
                cp .\third_party\breakpad
                .\third_party\breakpad\dump_syms.exe .\bin\usc-game.pdb > .\bin\crash_dumps\usc-game.syms
                mv .\bin\usc-game.pdb .\bin\crash_dumps\.
            - run: |	
                mkdir -p ${{ github.workspace }}/artifact
            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                name: Game
                path: bin
    distribution_trigger:
        name: Artifact distribution trigger
        runs-on: windows-latest
        if: github.ref == 'refs/heads/master'
        needs: [windows_build]
        steps:
            - name: Trigger artifact distribution
              continue-on-error: true
              run: |
                Invoke-RestMethod -Method POST -ContentType "application/json" -Body '{ "id": ${{ github.run_id }}}' -Uri ${{ secrets.WEBHOOK_URL }}
